/* * JMEP - Java Mathematical Expression Parser. * Copyright (C) 1999  Jo Desmet *  * This library is free software; you can redistribute it and/or * modify it under the terms of the GNU Lesser General Public * License as published by the Free Software Foundation; either * version 2.1 of the License, or any later version. *  * This library is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU * Lesser General Public License for more details. *  * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA *  * You can contact the Original submitter of this library by * email at: Jo_Desmet@yahoo.com. *  */package com.iabcinc.jmep.hooks;/**  * Interface that defines a skeleton for default function, unit and variable  * handling. Its use is deprecated because it is less performant than using the  * UnitCB, FunctionCB or VariableCB adaptor classes. The reason is that the latter  * ones are resolved at compile time (creation of the Expression) while the former  * one is resolved each time at evaluation of a unit, function of variable.  * @see com.iabcinc.jmep.Environment  * @see com.iabcinc.jmep.VariableCB  * @see com.iabcinc.jmep.FunctionCB  * @see com.iabcinc.jmep.UnitCB  * @deprecated use the more performant UnitCB, VariableCB and FunctionCB in stead  */public interface DefaultsCB {  public Object getValue(String sName);  public Object call(String sName,Object [] oPars);  public Object apply(String sName,Object oValue);}